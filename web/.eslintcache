[{"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Employees/Create/index.tsx":"1","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/Type/index.tsx":"2","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/Create/index.tsx":"3","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/index.tsx":"4","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Reports/index.tsx":"5","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Reports/Create/index.tsx":"6","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Employees/index.tsx":"7","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/Execution/index.tsx":"8"},{"size":4556,"mtime":1606253584137,"results":"9","hashOfConfig":"10"},{"size":4009,"mtime":1606247725301,"results":"11","hashOfConfig":"10"},{"size":3251,"mtime":1606253691338,"results":"12","hashOfConfig":"10"},{"size":3038,"mtime":1606253791347,"results":"13","hashOfConfig":"10"},{"size":2279,"mtime":1606247153043,"results":"14","hashOfConfig":"10"},{"size":1868,"mtime":1606247208243,"results":"15","hashOfConfig":"10"},{"size":2430,"mtime":1606253313802,"results":"16","hashOfConfig":"10"},{"size":3022,"mtime":1606253490912,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1db0ytn",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Employees/Create/index.tsx",[],"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/Type/index.tsx",[],"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/Create/index.tsx",["35","36"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport api from \"../../../services/api\";\nimport { Exam } from \"../../../types\";\n\nimport { HiArrowLeft, HiOutlineCheck } from \"react-icons/hi\";\nimport { CardContainer, CardBottom } from \"./styles\";\n\nimport Button from \"../../../components/Button\";\nimport SideBar from \"../../../components/SideBar\";\nimport Content from \"../../../components/Content\";\nimport Container from \"../../../components/Container\";\nimport Card from \"../../../components/Card\";\nimport Input from \"../../../components/Input\";\n\nconst Create: React.FC = () => {\n  const { id }: { id: string } = useParams();\n  const history = useHistory();\n\n  const [name, setName] = useState<string>(\"\");\n  const [shelfLife, setShelfLife] = useState<string>(\"\");\n  const [exams, setExams] = useState<Exam[]>([]);\n\n  useEffect(() => {\n    const data = async () => {\n      if (id) {\n        await api\n          .get(`exams/${id}`)\n          .then((res) => {\n            setName(res.data.name);\n            setShelfLife(res.data.shelfLife);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n\n      await api\n        .get(\"exams\")\n        .then((res) => {\n          setExams(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    data();\n  }, [id]);\n\n  const handleSubmit = async () => {\n    if (id) {\n      await api\n        .put(`exams/${id}`, { name, shelf_life: shelfLife })\n        .then((res) => {\n          setName(\"\");\n          setShelfLife(\"\");\n          history.push(\"/create-exam\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      await api\n        .post(\"exams\", { name, shelf_life: shelfLife })\n        .then((res) => {\n          setName(\"\");\n          setShelfLife(\"\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <SideBar visible={true} />\n      <Content>\n        <CardContainer>\n          <Link to=\"/exams\">\n            <HiArrowLeft size={12} style={{ marginRight: 8 }} />\n            Voltar\n          </Link>\n          <h1>{id ? \"Editando\" : \"Cadastrando\"} um exame</h1>\n          <Card style={{ padding: 32 }}>\n            <label htmlFor=\"name\">Nome</label>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Nome do exame - funcionÃ¡rio\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n            />\n            <br />\n            <label htmlFor=\"shelf_life\">Validade (dias)</label>\n            <Input\n              type=\"number\"\n              id=\"shelf_life\"\n              name=\"shelf_life\"\n              placeholder=\"00\"\n              onChange={(e) => setShelfLife(e.target.value)}\n              value={shelfLife}\n            />\n            <CardBottom>\n              <Button type=\"submit\">\n                <HiOutlineCheck size={56} />\n                <p>{id ? \"Editar\" : \"Criar\"}</p>\n              </Button>\n            </CardBottom>\n          </Card>\n        </CardContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Create;\n","/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/index.tsx",[],"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Reports/index.tsx",[],"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Reports/Create/index.tsx",[],"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Employees/index.tsx",[],"/home/thobias/projects/personal/Foa/trabalhos-th/medtech/web/src/pages/Exams/Execution/index.tsx",[],{"ruleId":"37","severity":1,"message":"38","line":22,"column":10,"nodeType":"39","messageId":"40","endLine":22,"endColumn":15},{"ruleId":"37","severity":1,"message":"41","line":51,"column":9,"nodeType":"39","messageId":"40","endLine":51,"endColumn":21},"@typescript-eslint/no-unused-vars","'exams' is assigned a value but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used."]