[{"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\routes.tsx":"1","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Home\\index.tsx":"2","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\SideBar\\index.tsx":"3","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\SideBar\\styles.ts":"4","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Card\\styles.ts":"5","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Content\\styles.ts":"6","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Auth\\Login\\index.tsx":"7","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Lead\\index.tsx":"8","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Input\\index.tsx":"9","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Content\\index.tsx":"10","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Button\\index.tsx":"11","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Card\\index.tsx":"12","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Container\\index.tsx":"13","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\styles\\global.ts":"14","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Employees\\index.tsx":"15","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Employees\\Create\\index.tsx":"16","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\utils\\AuthContext.tsx":"17","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Auth\\Register\\index.tsx":"18","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Button\\styles.ts":"19","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Auth\\Register\\styles.ts":"20","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Create\\index.tsx":"21","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Create\\styles.ts":"22","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\index.tsx":"23","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\MenuBar\\index.tsx":"24","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\MenuBar\\styles.ts":"25","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Reports\\Create\\index.tsx":"26","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Type\\index.tsx":"27","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Reports\\Create\\styles.ts":"28","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Reports\\index.tsx":"29","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Error\\NotFound\\index.tsx":"30","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Execution\\index.tsx":"31"},{"size":1501,"mtime":1606184668520,"results":"32","hashOfConfig":"33"},{"size":1479,"mtime":1606170643095,"results":"34","hashOfConfig":"33"},{"size":1136,"mtime":1606174341552,"results":"35","hashOfConfig":"33"},{"size":276,"mtime":1606171517075,"results":"36","hashOfConfig":"33"},{"size":1200,"mtime":1606182553385,"results":"37","hashOfConfig":"33"},{"size":584,"mtime":1606170942576,"results":"38","hashOfConfig":"33"},{"size":2023,"mtime":1606172502929,"results":"39","hashOfConfig":"33"},{"size":248,"mtime":1606170727141,"results":"40","hashOfConfig":"33"},{"size":265,"mtime":1606170730090,"results":"41","hashOfConfig":"33"},{"size":593,"mtime":1606184782479,"results":"42","hashOfConfig":"33"},{"size":258,"mtime":1606182056738,"results":"43","hashOfConfig":"33"},{"size":248,"mtime":1606170961373,"results":"44","hashOfConfig":"33"},{"size":243,"mtime":1606170963409,"results":"45","hashOfConfig":"33"},{"size":2015,"mtime":1606170996779,"results":"46","hashOfConfig":"33"},{"size":1623,"mtime":1606185442276,"results":"47","hashOfConfig":"33"},{"size":2247,"mtime":1606184249182,"results":"48","hashOfConfig":"33"},{"size":2661,"mtime":1606172312985,"results":"49","hashOfConfig":"33"},{"size":2709,"mtime":1606172569151,"results":"50","hashOfConfig":"33"},{"size":647,"mtime":1606180397172,"results":"51","hashOfConfig":"33"},{"size":448,"mtime":1601216911631,"results":"52","hashOfConfig":"33"},{"size":1577,"mtime":1606177990394,"results":"53","hashOfConfig":"33"},{"size":456,"mtime":1606177807423,"results":"54","hashOfConfig":"33"},{"size":2126,"mtime":1606184691554,"results":"55","hashOfConfig":"33"},{"size":263,"mtime":1606178485846,"results":"56","hashOfConfig":"33"},{"size":262,"mtime":1606183044899,"results":"57","hashOfConfig":"33"},{"size":1325,"mtime":1606184431708,"results":"58","hashOfConfig":"33"},{"size":1333,"mtime":1606183899485,"results":"59","hashOfConfig":"33"},{"size":456,"mtime":1606184408552,"results":"60","hashOfConfig":"33"},{"size":1609,"mtime":1606184516161,"results":"61","hashOfConfig":"33"},{"size":1015,"mtime":1606185401756,"results":"62","hashOfConfig":"33"},{"size":2095,"mtime":1606184954780,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m4js99",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\routes.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Home\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\SideBar\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\SideBar\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Card\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Content\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Auth\\Login\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Lead\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Input\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Content\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Button\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Card\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Container\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\styles\\global.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Employees\\index.tsx",["128"],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Employees\\Create\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\utils\\AuthContext.tsx",["129"],"import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport api from \"../services/api\";\r\n\r\nimport {\r\n  AuthContextProps,\r\n  LoginCredentials,\r\n  RegisterCredentials,\r\n  UserProps,\r\n} from \"../types\";\r\n\r\nconst AuthContext = createContext<Partial<AuthContextProps>>({});\r\n\r\nexport function AuthProvider({ children }: any) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(\"\");\r\n  const [signed, setSigned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function loadStorageData() {\r\n      setLoading(true);\r\n      const storagedToken = localStorage.getItem(\"maskclub_token\");\r\n      const _user = localStorage.getItem(\"maskclub_user\");\r\n\r\n      if (storagedToken) {\r\n        setSigned(true);\r\n        api.defaults.headers.Authorization = `Bearer ${storagedToken}`;\r\n        setUser(_user!);\r\n      } else {\r\n        setSigned(false);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    loadStorageData();\r\n  }, []);\r\n\r\n  async function saveUser(token: string, user: UserProps) {\r\n    localStorage.setItem(\"maskclub_token\", token);\r\n    localStorage.setItem(\"maskclub_user\", JSON.stringify(user));\r\n  }\r\n\r\n  async function signIn(credentials: LoginCredentials) {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/login\", credentials)\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        // await saveUser(res.data.data.token, res.data.user);\r\n        setSigned(true);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  async function signOut() {\r\n    setLoading(true);\r\n    localStorage.removeItem(\"maskclub_token\");\r\n    localStorage.removeItem(\"maskclub_user\");\r\n    setSigned(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function register(credentials: RegisterCredentials) {\r\n    setLoading(true);\r\n    await api\r\n      .post(\"/register\", credentials)\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        // await saveUser(res.data.token, res.data.user);\r\n        setSigned(true);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        signed,\r\n        loading,\r\n        user,\r\n        signIn,\r\n        signOut,\r\n        register,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider.\");\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport default AuthContext;\r\n","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Auth\\Register\\index.tsx",["130","131"],"import React, { FormEvent } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { HiArrowLeft, HiOutlineDownload } from \"react-icons/hi\";\n\nimport { CardContainer, CardBottom } from \"./styles\";\n\nimport Button from \"../../../components/Button\";\nimport SideBar from \"../../../components/SideBar\";\nimport Content from \"../../../components/Content\";\nimport Container from \"../../../components/Container\";\nimport Card from \"../../../components/Card\";\nimport Lead from \"../../../components/Lead\";\nimport Input from \"../../../components/Input\";\n\nconst Register: React.FC = () => {\n  const history = useHistory();\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    history.push(\"/events\");\n  };\n\n  return (\n    <Container>\n      <SideBar>\n        <Lead>\n          <h1>MedTech</h1>\n          <p>Você está prestes a criar a sua conta ;)</p>\n        </Lead>\n      </SideBar>\n      <Content>\n        <CardContainer>\n          <Link to=\"/\">\n            <HiArrowLeft size={12} style={{ marginRight: 8 }} />\n            Voltar\n          </Link>\n          <h1>Registrar</h1>\n          <Card style={{ padding: 32 }}>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"name\">Nome</label>\n              <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"John Doe\" />\n              <br />\n              <label htmlFor=\"email\">Endereço de e-mail</label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"exemplo@email.com\"\n              />\n              <br />\n              <label htmlFor=\"password\">Senha</label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"********\"\n              />\n              <br />\n              <label htmlFor=\"c_password\">Confirme a Senha</label>\n              <Input\n                type=\"password\"\n                id=\"c_password\"\n                name=\"password\"\n                placeholder=\"********\"\n              />\n              <CardBottom>\n                <p>\n                  Ao registrar no MedTech, você concorda com os{\" \"}\n                  <a href=\"#\">Termos de Uso</a> e a{\" \"}\n                  <a href=\"#\">Política de Privacidade</a>.\n                </p>\n                <Button type=\"submit\">\n                  <HiOutlineDownload\n                    size={56}\n                    style={{ transform: \"rotate(-90deg)\" }}\n                  />\n                </Button>\n              </CardBottom>\n            </form>\n          </Card>\n        </CardContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Register;\n","E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\Button\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Auth\\Register\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Create\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Create\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\MenuBar\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\components\\MenuBar\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Reports\\Create\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Type\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Reports\\Create\\styles.ts",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Reports\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Error\\NotFound\\index.tsx",[],"E:\\Desenvolvimento\\GitHub\\medtech\\web\\src\\pages\\Exams\\Execution\\index.tsx",[],{"ruleId":"132","severity":1,"message":"133","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":36,"column":18,"nodeType":"134","messageId":"135","endLine":36,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":70,"column":19,"nodeType":"139","endLine":70,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":71,"column":19,"nodeType":"139","endLine":71,"endColumn":31},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'saveUser' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]